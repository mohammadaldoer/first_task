{"ast":null,"code":"var _jsxFileName = \"/home/mohammadaldoer/Desktop/my-app/src/components/CountriesList.js\";\n// import React, { useContext, useState } from 'react';\n// import { CountriesContext } from '../context/CountriesContext';\n// import styles from '../styles/CountriesList.module.scss';\n\n// function CountriesList() {\n//   const { filteredCountries } = useContext(CountriesContext);\n//   const [currentPage, setCurrentPage] = useState(1);\n//   const cardsPerPage = 8;\n//   const totalPages = Math.ceil(filteredCountries.length / cardsPerPage);\n\n//   const indexOfLastCard = currentPage * cardsPerPage;\n//   const indexOfFirstCard = indexOfLastCard - cardsPerPage;\n//   const currentCountries = filteredCountries.slice(indexOfFirstCard, indexOfLastCard);\n\n//   const handleNextPage = () => {\n//     if (currentPage < totalPages) {\n//       setCurrentPage(currentPage + 1);\n//     }\n//   };\n\n//   const handlePreviousPage = () => {\n//     if (currentPage > 1) {\n//       setCurrentPage(currentPage - 1);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <ul className={styles['countries-list']}>\n//         {currentCountries.length > 0 ? (\n//           currentCountries.map((country) => (\n//             <div key={country.name.common} className={styles['country-card']}>\n//               <img src={country.flags.svg} alt={`${country.name.common} flag`} />\n//               <div className={styles['country-details']}>\n//                 <li>{country.name.common}</li>\n//                 <li>\n//                   <span>Population:</span> {country.population}\n//                 </li>\n//                 <li>\n//                   <span>Region:</span> {country.region}\n//                 </li>\n//                 <li>\n//                   <span>Capital:</span> {country.capital}\n//                 </li>\n//               </div>\n//             </div>\n//           ))\n//         ) : (\n//           <p>No countries found.</p>\n//         )}\n//       </ul>\n\n//       {filteredCountries.length > cardsPerPage && (\n//         <div className={styles.pagination}>\n//           <button\n//             onClick={handlePreviousPage}\n//             disabled={currentPage === 1}\n//           >\n//             Previous\n//           </button>\n//           <span>\n//             Page {currentPage} of {totalPages}\n//           </span>\n//           <button\n//             onClick={handleNextPage}\n//             disabled={currentPage === totalPages}\n//           >\n//             Next\n//           </button>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default CountriesList;\n\nfunction CountriesList() {\n  const {\n    filteredCountries\n  } = useContext(CountriesContext);\n  const [currentPage, setCurrentPage] = useState(1);\n  const cardsPerPage = 8;\n  const totalPages = Math.ceil(filteredCountries.length / cardsPerPage);\n  const indexOfLastCard = currentPage * cardsPerPage;\n  const indexOfFirstCard = indexOfLastCard - cardsPerPage;\n  const currentCountries = filteredCountries.slice(indexOfFirstCard, indexOfLastCard);\n  const handleNextPage = () => {\n    if (currentPage < totalPages) {\n      setCurrentPage(currentPage + 1);\n    }\n  };\n  const handlePreviousPage = () => {\n    if (currentPage > 1) {\n      setCurrentPage(currentPage - 1);\n    }\n  };\n  const handleCountryClick = countryName => {\n    window.history.pushState({\n      countryName\n    }, '', `/country/${countryName}`);\n    window.dispatchEvent(new Event('popstate')); // to trigger re-rendering\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: styles['countries-list'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, currentCountries.map(country => /*#__PURE__*/React.createElement(\"div\", {\n    key: country.name.common,\n    className: styles['country-card'],\n    onClick: () => handleCountryClick(country.name.common),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: country.flags.svg,\n    alt: `${country.name.common} flag`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles['country-details'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  }, country.name.common), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 19\n    }\n  }, \"Population:\"), \" \", country.population), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 19\n    }\n  }, \"Region:\"), \" \", country.region), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 19\n    }\n  }, \"Capital:\"), \" \", country.capital))))), filteredCountries.length > cardsPerPage && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.pagination,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handlePreviousPage,\n    disabled: currentPage === 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, \"Previous\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, \"Page \", currentPage, \" of \", totalPages), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleNextPage,\n    disabled: currentPage === totalPages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }, \"Next\")));\n}","map":{"version":3,"names":["CountriesList","filteredCountries","useContext","CountriesContext","currentPage","setCurrentPage","useState","cardsPerPage","totalPages","Math","ceil","length","indexOfLastCard","indexOfFirstCard","currentCountries","slice","handleNextPage","handlePreviousPage","handleCountryClick","countryName","window","history","pushState","dispatchEvent","Event","React","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","styles","map","country","key","name","common","onClick","src","flags","svg","alt","population","region","capital","pagination","disabled"],"sources":["/home/mohammadaldoer/Desktop/my-app/src/components/CountriesList.js"],"sourcesContent":["// import React, { useContext, useState } from 'react';\n// import { CountriesContext } from '../context/CountriesContext';\n// import styles from '../styles/CountriesList.module.scss';\n\n// function CountriesList() {\n//   const { filteredCountries } = useContext(CountriesContext);\n//   const [currentPage, setCurrentPage] = useState(1);\n//   const cardsPerPage = 8;\n//   const totalPages = Math.ceil(filteredCountries.length / cardsPerPage);\n\n//   const indexOfLastCard = currentPage * cardsPerPage;\n//   const indexOfFirstCard = indexOfLastCard - cardsPerPage;\n//   const currentCountries = filteredCountries.slice(indexOfFirstCard, indexOfLastCard);\n\n//   const handleNextPage = () => {\n//     if (currentPage < totalPages) {\n//       setCurrentPage(currentPage + 1);\n//     }\n//   };\n\n//   const handlePreviousPage = () => {\n//     if (currentPage > 1) {\n//       setCurrentPage(currentPage - 1);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <ul className={styles['countries-list']}>\n//         {currentCountries.length > 0 ? (\n//           currentCountries.map((country) => (\n//             <div key={country.name.common} className={styles['country-card']}>\n//               <img src={country.flags.svg} alt={`${country.name.common} flag`} />\n//               <div className={styles['country-details']}>\n//                 <li>{country.name.common}</li>\n//                 <li>\n//                   <span>Population:</span> {country.population}\n//                 </li>\n//                 <li>\n//                   <span>Region:</span> {country.region}\n//                 </li>\n//                 <li>\n//                   <span>Capital:</span> {country.capital}\n//                 </li>\n//               </div>\n//             </div>\n//           ))\n//         ) : (\n//           <p>No countries found.</p>\n//         )}\n//       </ul>\n\n//       {filteredCountries.length > cardsPerPage && (\n//         <div className={styles.pagination}>\n//           <button\n//             onClick={handlePreviousPage}\n//             disabled={currentPage === 1}\n//           >\n//             Previous\n//           </button>\n//           <span>\n//             Page {currentPage} of {totalPages}\n//           </span>\n//           <button\n//             onClick={handleNextPage}\n//             disabled={currentPage === totalPages}\n//           >\n//             Next\n//           </button>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default CountriesList;\n\nfunction CountriesList() {\n    const { filteredCountries } = useContext(CountriesContext);\n    const [currentPage, setCurrentPage] = useState(1);\n    const cardsPerPage = 8;\n    const totalPages = Math.ceil(filteredCountries.length / cardsPerPage);\n  \n    const indexOfLastCard = currentPage * cardsPerPage;\n    const indexOfFirstCard = indexOfLastCard - cardsPerPage;\n    const currentCountries = filteredCountries.slice(indexOfFirstCard, indexOfLastCard);\n  \n    const handleNextPage = () => {\n      if (currentPage < totalPages) {\n        setCurrentPage(currentPage + 1);\n      }\n    };\n  \n    const handlePreviousPage = () => {\n      if (currentPage > 1) {\n        setCurrentPage(currentPage - 1);\n      }\n    };\n  \n    const handleCountryClick = (countryName) => {\n      window.history.pushState({ countryName }, '', `/country/${countryName}`);\n      window.dispatchEvent(new Event('popstate')); // to trigger re-rendering\n    };\n  \n    return (\n      <div>\n        <ul className={styles['countries-list']}>\n          {currentCountries.map((country) => (\n            <div\n              key={country.name.common}\n              className={styles['country-card']}\n              onClick={() => handleCountryClick(country.name.common)}\n            >\n              <img src={country.flags.svg} alt={`${country.name.common} flag`} />\n              <div className={styles['country-details']}>\n                <li>{country.name.common}</li>\n                <li>\n                  <span>Population:</span> {country.population}\n                </li>\n                <li>\n                  <span>Region:</span> {country.region}\n                </li>\n                <li>\n                  <span>Capital:</span> {country.capital}\n                </li>\n              </div>\n            </div>\n          ))}\n        </ul>\n  \n        {filteredCountries.length > cardsPerPage && (\n          <div className={styles.pagination}>\n            <button onClick={handlePreviousPage} disabled={currentPage === 1}>\n              Previous\n            </button>\n            <span>Page {currentPage} of {totalPages}</span>\n            <button onClick={handleNextPage} disabled={currentPage === totalPages}>\n              Next\n            </button>\n          </div>\n        )}\n      </div>\n    );\n  }\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}