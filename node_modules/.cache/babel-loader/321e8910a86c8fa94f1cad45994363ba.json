{"ast":null,"code":"var _jsxFileName = \"/home/mohammadaldoer/Desktop/my-app/src/context/ThemeContext.js\";\n// import React, { createContext, useState, useContext } from 'react';\n\n// const ThemeContext = createContext();\n\n// export const ThemeProvider = ({ children }) => {\n//   const [theme, setTheme] = useState('light');\n\n//   const toggleTheme = () => {\n//     setTheme((prevTheme) => (prevTheme === 'light' ? 'dark' : 'light'));\n//   };\n\n//   return (\n//     <ThemeContext.Provider value={{ theme, toggleTheme }}>\n//       {children}\n//     </ThemeContext.Provider>\n//   );\n// };\n\n// export const useTheme = () => useContext(ThemeContext);\n\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nconst ThemeContext = createContext();\nexport const ThemeProvider = ({\n  children\n}) => {\n  const [theme, setTheme] = useState('light');\n  const toggleTheme = () => {\n    setTheme(prevTheme => prevTheme === 'light' ? 'dark' : 'light');\n  };\n  useEffect(() => {\n    document.body.className = theme; // Apply the theme class to the body\n  }, [theme]);\n  return /*#__PURE__*/React.createElement(ThemeContext.Provider, {\n    value: {\n      theme,\n      toggleTheme\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, children);\n};\nexport const useTheme = () => useContext(ThemeContext);","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","ThemeContext","ThemeProvider","children","theme","setTheme","toggleTheme","prevTheme","document","body","className","createElement","Provider","value","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","useTheme"],"sources":["/home/mohammadaldoer/Desktop/my-app/src/context/ThemeContext.js"],"sourcesContent":["// import React, { createContext, useState, useContext } from 'react';\n\n// const ThemeContext = createContext();\n\n// export const ThemeProvider = ({ children }) => {\n//   const [theme, setTheme] = useState('light');\n\n//   const toggleTheme = () => {\n//     setTheme((prevTheme) => (prevTheme === 'light' ? 'dark' : 'light'));\n//   };\n\n//   return (\n//     <ThemeContext.Provider value={{ theme, toggleTheme }}>\n//       {children}\n//     </ThemeContext.Provider>\n//   );\n// };\n\n// export const useTheme = () => useContext(ThemeContext);\n\nimport React, { createContext, useState, useContext, useEffect } from 'react';\n\nconst ThemeContext = createContext();\n\nexport const ThemeProvider = ({ children }) => {\n  const [theme, setTheme] = useState('light');\n\n  const toggleTheme = () => {\n    setTheme((prevTheme) => (prevTheme === 'light' ? 'dark' : 'light'));\n  };\n\n  useEffect(() => {\n    document.body.className = theme; // Apply the theme class to the body\n  }, [theme]);\n\n  return (\n    <ThemeContext.Provider value={{ theme, toggleTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n\nexport const useTheme = () => useContext(ThemeContext);"],"mappings":";AAAA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAE7E,MAAMC,YAAY,GAAGJ,aAAa,CAAC,CAAC;AAEpC,OAAO,MAAMK,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAC7C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,OAAO,CAAC;EAE3C,MAAMQ,WAAW,GAAGA,CAAA,KAAM;IACxBD,QAAQ,CAAEE,SAAS,IAAMA,SAAS,KAAK,OAAO,GAAG,MAAM,GAAG,OAAQ,CAAC;EACrE,CAAC;EAEDP,SAAS,CAAC,MAAM;IACdQ,QAAQ,CAACC,IAAI,CAACC,SAAS,GAAGN,KAAK,CAAC,CAAC;EACnC,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,oBACER,KAAA,CAAAe,aAAA,CAACV,YAAY,CAACW,QAAQ;IAACC,KAAK,EAAE;MAAET,KAAK;MAAEE;IAAY,CAAE;IAAAQ,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAClDhB,QACoB,CAAC;AAE5B,CAAC;AAED,OAAO,MAAMiB,QAAQ,GAAGA,CAAA,KAAMrB,UAAU,CAACE,YAAY,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}