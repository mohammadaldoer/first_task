{"ast":null,"code":"var _jsxFileName = \"/home/mohammadaldoer/Desktop/my-app/src/components/CountriesList.js\";\n// import React, { useContext, useState } from 'react';\n// import { CountriesContext } from '../context/CountriesContext';\n// import styles from '../styles/CountriesList.module.scss';\n\n// function CountriesList() {\n//   const { filteredCountries } = useContext(CountriesContext);\n//   const [currentPage, setCurrentPage] = useState(1); // Track current page\n//   const cardsPerPage = 8; // Number of cards to show per page\n\n//   // Calculate the total number of pages\n//   const totalPages = Math.ceil(filteredCountries.length / cardsPerPage);\n\n//   // Get the countries for the current page\n//   const indexOfLastCard = currentPage * cardsPerPage;\n//   const indexOfFirstCard = indexOfLastCard - cardsPerPage;\n//   const currentCountries = filteredCountries.slice(indexOfFirstCard, indexOfLastCard);\n\n//   // Handle page change\n//   const handleNextPage = () => {\n//     if (currentPage < totalPages) {\n//       setCurrentPage(currentPage + 1);\n//     }\n//   };\n\n//   const handlePreviousPage = () => {\n//     if (currentPage > 1) {\n//       setCurrentPage(currentPage - 1);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <ul className={styles['countries-list']}>\n//         {currentCountries.length > 0 ? (\n//           currentCountries.map((country) => (\n//             <div key={country.name.common} className={styles['country-card']}>\n//               <img src={country.flags.svg} alt={`${country.name.common} flag`} />\n//               <div className={styles['country-details']}>\n//                 <li>{country.name.common}</li>\n//                 <li>\n//                   <span>Population:</span> {country.population}\n//                 </li>\n//                 <li>\n//                   <span>Region:</span> {country.region}\n//                 </li>\n//                 <li>\n//                   <span>Capital:</span> {country.capital}\n//                 </li>\n//               </div>\n//             </div>\n//           ))\n//         ) : (\n//           <p>No countries found.</p>\n//         )}\n//       </ul>\n\n//       {/* Pagination Controls */}\n//       {filteredCountries.length > cardsPerPage && ( // Only show pagination if there are more than 8 countries\n//         <div className={styles.pagination}>\n//           <button\n//             onClick={handlePreviousPage}\n//             disabled={currentPage === 1} // Disable \"Previous\" on the first page\n//           >\n//             Previous\n//           </button>\n//           <span>\n//             Page {currentPage} of {totalPages}\n//           </span>\n//           <button\n//             onClick={handleNextPage}\n//             disabled={currentPage === totalPages} // Disable \"Next\" on the last page\n//           >\n//             Next\n//           </button>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default CountriesList;\n\nimport React, { useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { CountriesContext } from '../context/CountriesContext';\nimport styles from '../styles/CountriesList.module.scss';\nfunction CountriesList() {\n  const {\n    filteredCountries\n  } = useContext(CountriesContext);\n  const navigate = useNavigate(); // Hook for navigation\n\n  const handleCardClick = countryName => {\n    navigate(`/country/${countryName}`); // Navigate to details page\n  };\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    className: styles['countries-list'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }, filteredCountries.length > 0 ? filteredCountries.map(country => /*#__PURE__*/React.createElement(\"div\", {\n    key: country.name.common,\n    className: styles['country-card'],\n    onClick: () => handleCardClick(country.name.common) // Navigate on click\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: country.flags.svg,\n    alt: `${country.name.common} flag`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles['country-details'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 15\n    }\n  }, country.name.common), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }, \"Population:\"), \" \", country.population), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }, \"Region:\"), \" \", country.region), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  }, \"Capital:\"), \" \", country.capital)))) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, \"No countries found.\"));\n}\nexport default CountriesList;","map":{"version":3,"names":["React","useContext","useNavigate","CountriesContext","styles","CountriesList","filteredCountries","navigate","handleCardClick","countryName","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","length","map","country","key","name","common","onClick","src","flags","svg","alt","population","region","capital"],"sources":["/home/mohammadaldoer/Desktop/my-app/src/components/CountriesList.js"],"sourcesContent":["// import React, { useContext, useState } from 'react';\n// import { CountriesContext } from '../context/CountriesContext';\n// import styles from '../styles/CountriesList.module.scss';\n\n// function CountriesList() {\n//   const { filteredCountries } = useContext(CountriesContext);\n//   const [currentPage, setCurrentPage] = useState(1); // Track current page\n//   const cardsPerPage = 8; // Number of cards to show per page\n\n//   // Calculate the total number of pages\n//   const totalPages = Math.ceil(filteredCountries.length / cardsPerPage);\n\n//   // Get the countries for the current page\n//   const indexOfLastCard = currentPage * cardsPerPage;\n//   const indexOfFirstCard = indexOfLastCard - cardsPerPage;\n//   const currentCountries = filteredCountries.slice(indexOfFirstCard, indexOfLastCard);\n\n//   // Handle page change\n//   const handleNextPage = () => {\n//     if (currentPage < totalPages) {\n//       setCurrentPage(currentPage + 1);\n//     }\n//   };\n\n//   const handlePreviousPage = () => {\n//     if (currentPage > 1) {\n//       setCurrentPage(currentPage - 1);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <ul className={styles['countries-list']}>\n//         {currentCountries.length > 0 ? (\n//           currentCountries.map((country) => (\n//             <div key={country.name.common} className={styles['country-card']}>\n//               <img src={country.flags.svg} alt={`${country.name.common} flag`} />\n//               <div className={styles['country-details']}>\n//                 <li>{country.name.common}</li>\n//                 <li>\n//                   <span>Population:</span> {country.population}\n//                 </li>\n//                 <li>\n//                   <span>Region:</span> {country.region}\n//                 </li>\n//                 <li>\n//                   <span>Capital:</span> {country.capital}\n//                 </li>\n//               </div>\n//             </div>\n//           ))\n//         ) : (\n//           <p>No countries found.</p>\n//         )}\n//       </ul>\n\n//       {/* Pagination Controls */}\n//       {filteredCountries.length > cardsPerPage && ( // Only show pagination if there are more than 8 countries\n//         <div className={styles.pagination}>\n//           <button\n//             onClick={handlePreviousPage}\n//             disabled={currentPage === 1} // Disable \"Previous\" on the first page\n//           >\n//             Previous\n//           </button>\n//           <span>\n//             Page {currentPage} of {totalPages}\n//           </span>\n//           <button\n//             onClick={handleNextPage}\n//             disabled={currentPage === totalPages} // Disable \"Next\" on the last page\n//           >\n//             Next\n//           </button>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default CountriesList;\n\nimport React, { useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { CountriesContext } from '../context/CountriesContext';\nimport styles from '../styles/CountriesList.module.scss';\n\nfunction CountriesList() {\n  const { filteredCountries } = useContext(CountriesContext);\n  const navigate = useNavigate(); // Hook for navigation\n\n  const handleCardClick = (countryName) => {\n    navigate(`/country/${countryName}`); // Navigate to details page\n  };\n\n  return (\n    <ul className={styles['countries-list']}>\n      {filteredCountries.length > 0 ? (\n        filteredCountries.map((country) => (\n          <div\n            key={country.name.common}\n            className={styles['country-card']}\n            onClick={() => handleCardClick(country.name.common)} // Navigate on click\n          >\n            <img src={country.flags.svg} alt={`${country.name.common} flag`} />\n            <div className={styles['country-details']}>\n              <li>{country.name.common}</li>\n              <li>\n                <span>Population:</span> {country.population}\n              </li>\n              <li>\n                <span>Region:</span> {country.region}\n              </li>\n              <li>\n                <span>Capital:</span> {country.capital}\n              </li>\n            </div>\n          </div>\n        ))\n      ) : (\n        <p>No countries found.</p>\n      )}\n    </ul>\n  );\n}\n\nexport default CountriesList;"],"mappings":";AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,gBAAgB,QAAQ,6BAA6B;AAC9D,OAAOC,MAAM,MAAM,qCAAqC;AAExD,SAASC,aAAaA,CAAA,EAAG;EACvB,MAAM;IAAEC;EAAkB,CAAC,GAAGL,UAAU,CAACE,gBAAgB,CAAC;EAC1D,MAAMI,QAAQ,GAAGL,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEhC,MAAMM,eAAe,GAAIC,WAAW,IAAK;IACvCF,QAAQ,CAAC,YAAYE,WAAW,EAAE,CAAC,CAAC,CAAC;EACvC,CAAC;EAED,oBACET,KAAA,CAAAU,aAAA;IAAIC,SAAS,EAAEP,MAAM,CAAC,gBAAgB,CAAE;IAAAQ,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACrCX,iBAAiB,CAACY,MAAM,GAAG,CAAC,GAC3BZ,iBAAiB,CAACa,GAAG,CAAEC,OAAO,iBAC5BpB,KAAA,CAAAU,aAAA;IACEW,GAAG,EAAED,OAAO,CAACE,IAAI,CAACC,MAAO;IACzBZ,SAAS,EAAEP,MAAM,CAAC,cAAc,CAAE;IAClCoB,OAAO,EAAEA,CAAA,KAAMhB,eAAe,CAACY,OAAO,CAACE,IAAI,CAACC,MAAM,CAAE,CAAC;IAAA;IAAAX,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAErDjB,KAAA,CAAAU,aAAA;IAAKe,GAAG,EAAEL,OAAO,CAACM,KAAK,CAACC,GAAI;IAACC,GAAG,EAAE,GAAGR,OAAO,CAACE,IAAI,CAACC,MAAM,OAAQ;IAAAX,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eACnEjB,KAAA,CAAAU,aAAA;IAAKC,SAAS,EAAEP,MAAM,CAAC,iBAAiB,CAAE;IAAAQ,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACxCjB,KAAA,CAAAU,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAKG,OAAO,CAACE,IAAI,CAACC,MAAW,CAAC,eAC9BvB,KAAA,CAAAU,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACEjB,KAAA,CAAAU,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAM,aAAiB,CAAC,KAAC,EAACG,OAAO,CAACS,UAChC,CAAC,eACL7B,KAAA,CAAAU,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACEjB,KAAA,CAAAU,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAM,SAAa,CAAC,KAAC,EAACG,OAAO,CAACU,MAC5B,CAAC,eACL9B,KAAA,CAAAU,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACEjB,KAAA,CAAAU,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAM,UAAc,CAAC,KAAC,EAACG,OAAO,CAACW,OAC7B,CACD,CACF,CACN,CAAC,gBAEF/B,KAAA,CAAAU,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,qBAAsB,CAEzB,CAAC;AAET;AAEA,eAAeZ,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module"}