{"ast":null,"code":"var _jsxFileName = \"/home/mohammadaldoer/Desktop/my-app/src/components/CountriesList.js\";\nimport React, { useContext, useState } from 'react';\nimport { CountriesContext } from '../context/CountriesContext';\nimport styles from '../styles/CountriesList.module.scss';\nfunction CountriesList() {\n  const {\n    filteredCountries\n  } = useContext(CountriesContext);\n  const [currentPage, setCurrentPage] = useState(1); // Track current page\n  const cardsPerPage = 8; // Number of cards to show per page\n\n  const totalPages = Math.ceil(filteredCountries.length / cardsPerPage);\n  const indexOfLastCard = currentPage * cardsPerPage;\n  const indexOfFirstCard = indexOfLastCard - cardsPerPage;\n  const currentCountries = filteredCountries.slice(indexOfFirstCard, indexOfLastCard);\n\n  // Handle page change\n  const handleNextPage = () => {\n    if (currentPage < totalPages) {\n      setCurrentPage(currentPage + 1);\n    }\n  };\n  const handlePreviousPage = () => {\n    if (currentPage > 1) {\n      setCurrentPage(currentPage - 1);\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: styles['countries-list'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, currentCountries.length > 0 ? currentCountries.map(country => /*#__PURE__*/React.createElement(\"div\", {\n    key: country.name.common,\n    className: styles['country-card'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: country.flags.svg,\n    alt: `${country.name.common} flag`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles['country-details'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, country.name.common), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 19\n    }\n  }, \"Population:\"), \" \", country.population), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 19\n    }\n  }, \"Region:\"), \" \", country.region), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 19\n    }\n  }, \"Capital:\"), \" \", country.capital)))) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, \"No countries found.\")), filteredCountries.length > cardsPerPage &&\n  /*#__PURE__*/\n  // Only show pagination if there are more than 8 countries\n  React.createElement(\"div\", {\n    className: styles.pagination,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handlePreviousPage,\n    disabled: currentPage === 1 // Disable \"Previous\" on the first page\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, \"Previous\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, \"Page \", currentPage, \" of \", totalPages), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleNextPage,\n    disabled: currentPage === totalPages // Disable \"Next\" on the last page\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, \"Next\")));\n}\nexport default CountriesList;","map":{"version":3,"names":["React","useContext","useState","CountriesContext","styles","CountriesList","filteredCountries","currentPage","setCurrentPage","cardsPerPage","totalPages","Math","ceil","length","indexOfLastCard","indexOfFirstCard","currentCountries","slice","handleNextPage","handlePreviousPage","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","map","country","key","name","common","src","flags","svg","alt","population","region","capital","pagination","onClick","disabled"],"sources":["/home/mohammadaldoer/Desktop/my-app/src/components/CountriesList.js"],"sourcesContent":["import React, { useContext, useState } from 'react';\nimport { CountriesContext } from '../context/CountriesContext';\nimport styles from '../styles/CountriesList.module.scss';\n\nfunction CountriesList() {\n  const { filteredCountries } = useContext(CountriesContext);\n  const [currentPage, setCurrentPage] = useState(1); // Track current page\n  const cardsPerPage = 8; // Number of cards to show per page\n\n  const totalPages = Math.ceil(filteredCountries.length / cardsPerPage);\n\n  const indexOfLastCard = currentPage * cardsPerPage;\n  const indexOfFirstCard = indexOfLastCard - cardsPerPage;\n  const currentCountries = filteredCountries.slice(indexOfFirstCard, indexOfLastCard);\n\n  // Handle page change\n  const handleNextPage = () => {\n    if (currentPage < totalPages) {\n      setCurrentPage(currentPage + 1);\n    }\n  };\n\n  const handlePreviousPage = () => {\n    if (currentPage > 1) {\n      setCurrentPage(currentPage - 1);\n    }\n  };\n\n  return (\n    <div>\n      <ul className={styles['countries-list']}>\n        {currentCountries.length > 0 ? (\n          currentCountries.map((country) => (\n            <div key={country.name.common} className={styles['country-card']}>\n              <img src={country.flags.svg} alt={`${country.name.common} flag`} />\n              <div className={styles['country-details']}>\n                <li>{country.name.common}</li>\n                <li>\n                  <span>Population:</span> {country.population}\n                </li>\n                <li>\n                  <span>Region:</span> {country.region}\n                </li>\n                <li>\n                  <span>Capital:</span> {country.capital}\n                </li>\n              </div>\n            </div>\n          ))\n        ) : (\n          <p>No countries found.</p>\n        )}\n      </ul>\n\n      {/* Pagination Controls */}\n      {filteredCountries.length > cardsPerPage && ( // Only show pagination if there are more than 8 countries\n        <div className={styles.pagination}>\n          <button\n            onClick={handlePreviousPage}\n            disabled={currentPage === 1} // Disable \"Previous\" on the first page\n          >\n            Previous\n          </button>\n          <span>\n            Page {currentPage} of {totalPages}\n          </span>\n          <button\n            onClick={handleNextPage}\n            disabled={currentPage === totalPages} // Disable \"Next\" on the last page\n          >\n            Next\n          </button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default CountriesList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}